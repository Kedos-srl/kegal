{
    "$defs": {
        "AwsConfig": {
            "description": "Represents the AWS configuration needed for accessing AWS services.\n\n:param region: The AWS region (e.g., 'us-east-1').\n:param access_key: The AWS access key used for authentication.\n:param secret_key: The AWS secret key used for authentication.",
            "properties": {
                "region": {
                    "description": "The AWS region",
                    "title": "Region",
                    "type": "string"
                },
                "access_key": {
                    "description": "The AWS access key",
                    "title": "Access Key",
                    "type": "string"
                },
                "secret_key": {
                    "description": "The AWS secret key",
                    "title": "Secret Key",
                    "type": "string"
                }
            },
            "required": [
                "region",
                "access_key",
                "secret_key"
            ],
            "title": "AwsConfig",
            "type": "object"
        },
        "EdgeData": {
            "description": "Pydantic model representing an edge schema.\n\n:param source: Start edge node (id)\n:param target: End edge node (id)\n:param attrib: A specific node output, must be one of the allowed enum values",
            "properties": {
                "source": {
                    "description": "Start edge node (id)",
                    "title": "Source",
                    "type": "string"
                },
                "target": {
                    "description": "End edge node (id)",
                    "title": "Target",
                    "type": "string"
                },
                "attrib": {
                    "description": "A possible string value representing a specific node output",
                    "enum": [
                        "chat_messages",
                        "user_message",
                        "assistant_message",
                        "history",
                        "empty"
                    ],
                    "title": "Attrib",
                    "type": "string"
                }
            },
            "required": [
                "source",
                "target",
                "attrib"
            ],
            "title": "EdgeData",
            "type": "object"
        },
        "LlmConfig": {
            "description": "Represents the configuration for a large language model.\n\n:param llm: The name of the large language model.\n:param version: The version of the large language model.\n:param host: The host server address where the model is deployed (ex. Ollama). Can be null if not applicable.\n:param api_key: The API key required for authentication (ex. OpenAi). Can be null if not applicable.\n:param aws_config: The AWS configuration for accessing additional resources. This field is optional.",
            "properties": {
                "llm": {
                    "description": "The name of the llm",
                    "title": "Llm",
                    "type": "string"
                },
                "version": {
                    "description": "The version of the llm",
                    "title": "Version",
                    "type": "string"
                },
                "host": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The host server (can be null)",
                    "title": "Host"
                },
                "api_key": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "The API key for authentication (can be null)",
                    "title": "Api Key"
                },
                "aws_config": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/AwsConfig"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "AWS configuration"
                }
            },
            "required": [
                "llm",
                "version"
            ],
            "title": "LlmConfig",
            "type": "object"
        },
        "NodeData": {
            "description": "Represents the configuration schema for an agent (node).\n\n:param id: Unique name of the agent\n:param llm: Index from LLM models list\n:param temperature: Controls randomness in LLM responses (0-1)\n:param show: Determines if output should be visible to the user\n:param prompt: Embedded object for the system prompt details",
            "properties": {
                "id": {
                    "description": "The unique name of the agent",
                    "title": "Id",
                    "type": "string"
                },
                "llm": {
                    "description": "The index from LLM models list",
                    "minimum": 0,
                    "title": "Llm",
                    "type": "integer"
                },
                "temperature": {
                    "description": "Parameter of the LLM, controlling randomness in responses",
                    "maximum": 1.0,
                    "minimum": 0.0,
                    "title": "Temperature",
                    "type": "number"
                },
                "show": {
                    "description": "Determines if the agent creates visible output for the user",
                    "title": "Show",
                    "type": "boolean"
                },
                "prompt": {
                    "$ref": "#/$defs/PromptData",
                    "description": "System prompt object"
                }
            },
            "required": [
                "id",
                "llm",
                "temperature",
                "show",
                "prompt"
            ],
            "title": "NodeData",
            "type": "object"
        },
        "PromptData": {
            "description": "Represents the system prompt configuration.\n\n:param system: The index of the system prompt\n:param placeholders: Key-value placeholders defined following the list\n                     of values defined in the ke_prmpt as json file (node/node_name/node_name.json)",
            "properties": {
                "system": {
                    "description": "Index of the system prompt",
                    "title": "System",
                    "type": "integer"
                },
                "placeholders": {
                    "additionalProperties": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "number"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "object"
                            },
                            {
                                "items": {},
                                "type": "array"
                            }
                        ]
                    },
                    "description": "Key-value dictionary of placeholders",
                    "title": "Placeholders",
                    "type": "object"
                }
            },
            "required": [
                "system",
                "placeholders"
            ],
            "title": "PromptData",
            "type": "object"
        },
        "SystemPrompt": {
            "description": "The model ensures that exactly one of the following fields is provided:\n- `text`: A string containing the text content of the system prompt.\n- `path`: A string representing the file path of the system prompt.\n- `url`: A string for the URL of the markdown file containing the system prompt.\n\n:param text: Optional string containing the textual content of the system prompt.\n:param path: Optional string containing the file path of the system prompt.\n:param url: Optional string containing the URL of the markdown file with the system prompt.",
            "properties": {
                "text": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Text content of the system prompt",
                    "title": "Text"
                },
                "path": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Path of the system prompt file",
                    "title": "Path"
                },
                "url": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "URL of the markdown file containing the system prompt",
                    "title": "Url"
                }
            },
            "title": "SystemPrompt",
            "type": "object"
        }
    },
    "description": "A Pydantic model representing the Graph Configuration schema.\n\n# UTILS\n- Convert graph to json\n  graph_.model_dump_json()\n\n- Initialize graph from json\n  GraphData(**json_raw)\n\n\n:param models: Array containing configurations of large language models.\n:param systems: Array containing systems configurations.\n:param nodes: Array containing configurations of agents (graph nodes).\n:param edges: Array containing connections between graph nodes.\n:return:",
    "properties": {
        "models": {
            "description": "Array containing configurations of large language models.",
            "items": {
                "$ref": "#/$defs/LlmConfig"
            },
            "title": "Models",
            "type": "array"
        },
        "systems": {
            "anyOf": [
                {
                    "items": {
                        "$ref": "#/$defs/SystemPrompt"
                    },
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ],
            "default": null,
            "description": "Array containing systems configurations",
            "title": "Systems"
        },
        "nodes": {
            "description": "Array containing configurations of agents (graph nodes).",
            "items": {
                "$ref": "#/$defs/NodeData"
            },
            "title": "Nodes",
            "type": "array"
        },
        "edges": {
            "description": "Array containing connections between graph nodes.",
            "items": {
                "$ref": "#/$defs/EdgeData"
            },
            "title": "Edges",
            "type": "array"
        }
    },
    "required": [
        "models",
        "systems",
        "nodes",
        "edges"
    ],
    "title": "GraphData",
    "type": "object"
}